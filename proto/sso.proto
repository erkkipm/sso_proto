syntax = "proto3";
// Текущий пакет - указывает пространство имен для сервиса и сообщений.
package auth;

//import "google/protobuf/timestamp.proto";

// Настройки для генерации GO кода. Используется при генерации файлов на GO
option go_package = "github.com/erkkipm/proto_sso;ssov1";
//option go_package = "github.com/wpcodevo/golang-mongodb/pb";

// Сервис для входа и регистрации
service Auth {
  // Регистрация нового пользователя
  rpc Register(RegisterRequest) returns (RegisterResponse);
  // Вход в приложение
  rpc Login(LoginRequest) returns (LoginResponse);
  // Проверка. Имеет ли пользователь права администратора
  rpc IsAdmin(IsAdminRequest) returns (IsAdminResponse);
  // Запрос пользователя по ID
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc Logout(LogoutRequest) returns (LogoutResponse);
}


//service Permissions {
//  rpc GetUserPermissions(GetUserPermissionsRequest) returns (GetUserPermissionsResponse);
//}

//service UserInfo {
//  rpc GetUserInfo(GetUserInfoRequest) returns (GetUserInfoResponse);
//}

message RegisterRequest {
  string email = 1; // e-mail при регистрации
  string phone = 2; // Телефон при регистрации
  string password = 3; // Пароль при регистрации
  string app_id = 4; // Идентификатор приложения
//  google.protobuf.Timestamp created_at = 3;
//  google.protobuf.Timestamp updated_at = 4;
}

message RegisterResponse {
  int64 user_id = 1;  // Идентификатор зарегистрированного юзера
  bool success = 2; // Статус регистрации
  string message = 3; // Сообщение
}

message LoginRequest {
  string email = 1; // e-mail при входе
  string password = 2; // Пароль при входе
  string app_id = 3; // Идентификатор приложения для входа
}

message LoginResponse {
  string token = 1; // Токен для входа в приложение
}

message GetUserRequest {
  string name = 1; // Имя юзера
  string email = 2; // e-mail юзера
}

message GetUserResponse {
  int64 user_id = 1;  // Идентификатор юзера
}

message IsAdminRequest {
  int64 user_id = 1; // Идентификатор юзера
}

message IsAdminResponse {
  bool is_admin = 1; // Признак администратора
}

message LogoutRequest {
  string token = 1; // Токен для выхода
}

message LogoutResponse {
  bool success = 1; // Статус выхода
}